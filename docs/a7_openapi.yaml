openapi: 3.0.0

info: 
  version: '2.0'
  title: 'The Bulletin API'
  description: 'The Bulletin Web Resources Specification (A7)'

servers:
  - url: https://lbaw24104.lbaw.fe.up.pt

externalDocs:
  description: Find more info here
  url: https://gitlab.up.pt/lbaw/lbaw2425/lbaw24104/-/wikis/eap

tags:
 - name: 'M01: Authentication'
 - name: 'M02: Users'
 - name: 'M03: Posts'
 - name: 'M04: Administration'

paths:

#################################################
# AUTHENTICATION
#################################################

/login:
  get:
    operationId: R101
    summary: 'R101: Login Form'
    description: 'Provide login form Access: PUB'
    tags:
      - 'M01: Authentication'
    responses: 
      '200':
        description: 'Ok. Show Log-in UI'

  post: 
    operationId: R102
    summary: 'R102: Login Action'
    description: 'Process the login form submission. Access: PUB'
    tags:
      - 'M01: Authentication'
    requestBody:
      required: true
      content: 
        application/x-www-form-urlenconded:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password: 
                type: string
                format: password
            required:
              - email
              - password
    responses:
      '302':
        description: 'Redirect after processing login credentials'
        headers:
          Location:
            schema:
              type: string
            examples:
              302Success:
                description: 'Login Successful. Redirect to homepage.'
                value: '/home'
              302Error:
                description: 'Failed authentication. Redirect to Login form.'
                value: '/login'

/logout:
  post:
    operationId: R103
    summary: 'R103: Logout Action'
    description: 'Logout current user. Access: USR,ADM'
    tags:
      - 'M01: Authentication'
    responses:
      '302':
        description: 'Redirect after processing logout.'
        headers:
          Location:
            schema:
              type: string
            examples:
              302Success: 
                description: 'Successful Logout. Redirect to login form.'
                value: '/login'

/register:
  get:
    operationId: R104
    summary: 'R104: Register Form'
    description: 'Register a new user. Access: PUB'
    tags:
      - 'M01: Authentication'
    responses:
      '200':
        description: 'Ok. Show Sign-Up UI'

  post:
    operationId: R105
    summary: 'R105: Register Action'
    description: 'Processes the new user registration form submission. Access: PUB'
    tags:
     - 'M01: Authentication'
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              confirm_password:
                type: string
                format: password
            required:
              - username
              - email
              - password
              - confirm_password
    responses:
      '302':
        description: 'Redirect after processing the new user information.'
        headers:
          Location:
            schema:
              type: string
            examples:
              302Success:
                description: 'Successful authentication. Redirect to homepage.'
                value: '/home'
              302Failure:
                description: 'Failed authentication. Redirect to login form.'
                value: '/login'

#################################################
# USERS
#################################################

/users/{id}:
  get:
    operationId: R201
    summary: 'R201: View userâ€™s profile'
    description: 'Show the profile for a specific user. Access: USR, ADM'
    tags: 
      - 'M02: Users'
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: 'The ID of the user whose profile is being viewed.'
    responses:
      '200':
        description: 'OK. Show the profile for the specified user.'
      '404':
        description: 'User not found.'

/users/{id}/edit:
  post:
    operationId: R202
    summary: 'R202: Edit profile'
    description: 'Processes the form to update the profile information of the specified user. Access: USR, ADM'
    tags: 
      - 'M02: Users'
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              username:
                type: string
                description: 'Updated username'
              email:
                type: string
                format: email
                description: 'Updated email address'
              password:
                type: string
                format: password
              confirm_password:
                type: string
                format: password
                description: 'Confirm updated password'
            required:
              - username
              - email
    responses:
      '200':  
        description: 'Profile updated successfully.'
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      '400':
        description: 'Bad request. Invalid input.'
      '404':
        description: 'User not found.'

#################################################
# POSTS
#################################################

/posts/createPost:
  post:
    operationId: R301
    summary: 'R301: Create News Item action'
    description: 'Submit a new news item. Access: USR'
    tags:
      - 'M03: Posts'
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              title:
                type: string
                description: 'Title of the news item'
              content:
                type: string
                description: 'Main content of the news item'
            required:
              - title
              - content
    responses:
      '302':
        description: 'Redirect after successfully creating the news item.'
        headers:
          Location:
            schema:
              type: string
            examples:
              302Success:
                value: '/post/{id}'
                description: 'Redirect to the newly created news item.'
              302Failure:
                value: '/posts/createPost'
                description: 'Failed. Redirect back.'

/post/{id}:
  get:
    operationId: R302
    summary: 'R302: View News Item'
    description: 'Retrieve detailed information about a specific news item. Access: PUB, USR'
    tags:
      - 'M03: Posts'
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: 'The ID of the news item to retrieve.'
    responses:
      '200':
        description: 'Success. Returns the details of the post.'
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                title:
                  type: string
                content:
                  type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                author:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      '404':
        description: 'News item not found.'

/post/{id}:
  post:
    operationId: R303
    summary: 'R303: Edit Post'
    description: 'Edit an existing post by the author. Access: USR (author only).'
    tags:
      - 'M03: Posts'
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: 'The ID of the post to edit.'
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              title:
                type: string
                description: 'Updated title of the post.'
              content:
                type: string
                description: 'Updated content of the post.'
              tags:
                type: array
                items:
                  type: string
                description: 'Updated tags for the post.'
            required:
              - title
              - content
    responses:
      '200':
        description: 'Post updated successfully.'
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                title:
                  type: string
                content:
                  type: string
                updated_at:
                  type: string
                  format: date-time
                tags:
                  type: array
                  items:
                    type: string
      '403':
        description: 'Forbidden. You can only edit your own post.'
      '404':
        description: 'Post not found.'

/post/{id}:
  delete:
    operationId: R304
    summary: 'R304: Delete Post'
    description: 'Delete a post by the author. Access: USR (author only).'
    tags:
      - 'M03: Posts'
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: 'The ID of the post to delete.'
    responses:
      '200':
        description: 'Post deleted successfully.'
      '403':
        description: 'Forbidden. You can only delete your own post.'
      '404':
        description: 'Post not found.'

/posts/search:
  get:
    operationId: R305
    summary: 'R305: Full-Text Search'
    description: 'Search for posts using full-text search. Access: PUB, USR'
    tags:
      - 'M03: Posts'
    parameters:
      - in: query
        name: query
        description: 'Search string for full-text search in post titles and content.'
        schema:
          type: string
        required: true
      - in: query
        name: tags
        description: 'Filter posts by specific tags.'
        schema:
          type: array
          items:
            type: string
        required: false
      - in: query
        name: author
        description: 'Filter posts by specific author ID.'
        schema:
          type: integer
        required: false
      - in: query
        name: date
        description: 'Filter posts by a specific date.'
        schema:
          type: string
          format: date
        required: false
    responses:
      '200':
        description: 'Success. Returns a list of posts matching the search query.'
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  content:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  author:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
      '404':
        description: 'No posts found matching the query.'

####################################
# ADMINISTRATION
####################################

/admin:
  post:
    operationId: R401
    summary: 'R401: Create User'
    description: 'Allows a System Manager to create a new user account dynamically from the Admin Dashboard. Access: ADM'
    tags:
      - 'M04: Administration'
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              username:
                type: string
                description: 'The username of the new user'
              email:
                type: string
                format: email
                description: 'The email address of the new user'
              password:
                type: string
                format: password
                description: 'The password for the new user'
              confirm_password:
                type: string
                format: password
                description: 'Confirmation of the password for the new user'
            required:
              - username
              - email
              - password
              - confirm_password
    responses:
      '201':
        description: 'User successfully created.'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                user_id:
                  type: integer
                username:
                  type: string
                email:
                  type: string
      '400':
        description: 'Validation error. Invalid input data.'
